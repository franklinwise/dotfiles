package util

import (
	"bytes"
	"encoding/json"
)

// MapToStruct is a way to deserialize a dictionary of strings into a struct
// To enable a terse syntax the following pattern is prefered:
//
//		myType, err := MapToStruct(source, new (MyType))
//
func MapToStruct(m map[string][]string, val interface{}) error {
	simple := make(map[string]string, len(m))
	for k, v := range m {
		simple[k] = v[0]
	}
	b := new(bytes.Buffer)
	e := json.NewEncoder(b)
	e.Encode(simple)
	d := json.NewDecoder(b)
	err := d.Decode(&val)
	return err
}
