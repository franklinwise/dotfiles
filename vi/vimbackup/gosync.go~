package main
import (
    "log"
    "fmt"
    "flag"
    "net/http"
    "github.com/gorilla/mux"
    "github.com/cihub/seelog"
)

func setupHandlers(r *mux.Router) {
    r.HandleFunc("/ping", Handlers.PingHandler).Methods("GET")
    r.HandleFunc("/sync/SlowChangingData", Handlers.SlowChangingDataHandler).Methods("POST")
}

var port = flag.String("port", "3000", "port to run the server on")

func main() {
    defer seelog.Flush()
    defaultLogger, err := seelog.LoggerFromConfigAsFile("conf/logger.conf")
    if err != nil {
        log.Fatal(err)
    }

    UseLogger(defaultLogger)
    logger.Info("Starting up...");
    r := mux.NewRouter()
    setupHandlers(r)
    http.Handle("/", r)
    logger.Infof("Listening on %s", *port);
    err := http.ListenAndServe(fmt.Sprintf(":%s", *port), nil)
    if err != nil {
        logger.Criticalf("ListenAndServe: ", err)
    }
}
